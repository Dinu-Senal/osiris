@page "/report/company-report/{CompanyName}/{CompanyId}/"
@using Osiris.Data
@inject ProjectService projectService
@inject NavigationManager NavigationManager

<div class="mb-5">
    <div class="back-button-container" style="display: inline">
        <div class="oi oi-chevron-left" @onclick="GoBack" style="color: #fff;" />
    </div>
    <h3 style="display: inline">@CompanyName Company - Project Report</h3>
</div>

@if (projectListObj is null)
{
    <LoadingSpinner />
}
else
{
    <div class="mb-4">
        <div class="row">
            <div class="col-3">
                <select class="custom-select" @bind="projectFilter">
                    <option value="All" selected>All</option>
                    <option value="Complete">Complete</option>
                    <option value="Incomplete">Incomplete</option>
                </select>
            </div>
            <div class="col-4">
                <button class="btn-main" @onclick="filterByStatus">Filter</button>
            </div>
        </div>
    </div>

    <div class="osiris-secondary-card-heading p-2 mb-2">
        <div class="row">
            <div class="col">
                Project Name
            </div>
            <div class="col">
                Description
            </div>
        </div>
    </div>

    <div class="container-scroll mb-3">
        @foreach (var project in projectListObj)
            @if (project.CompanyId.ToString().Equals(CompanyId))
            {
                <div class="company-report-card p-3 my-1">
                    <div class="row" @onclick="() => OpenTicketReport(project.Name, project.ProjectId)">
                        <div class="oi oi-folder px-3" style="color: black"></div>
                        <div class="col">
                            @project.Name
                        </div>
                        <div class="col">
                            @project.Description
                        </div>
                    </div>
                </div>
            }
        </div>
    }

@code {
    [Parameter]
    public String CompanyId { get; set; }
    [Parameter]
    public String CompanyName { get; set; }

    List<Project> projectListObj;
    private String projectFilter = "All";

    private async Task loadData()
    {
        projectListObj = await Task.Run(() => projectService.GetAllProjectsAsync());
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await loadData();
    }

    private async Task filterByStatus()
    {
        if (projectFilter.Equals("All"))
        {
            projectListObj = await Task.Run(() => projectService.GetAllProjectsAsync());
        }
        else
        {
            projectListObj = await Task.Run(() => projectService.FilterProject(projectFilter));
        }
        StateHasChanged();
    }
    private void OpenTicketReport(String projectName, Guid projectId)
    {
        NavigationManager.NavigateTo($"/report/company-report/{CompanyName}/{CompanyId}/ticket-report/{projectName}/{projectId}");
    }
    private void GoBack()
    {
        NavigationManager.NavigateTo($"/report");
    }
}
