@page "/companies"
@using Osiris.Data;
@inject CompanyService companyService
@inject UserService userService
@inject NavigationManager NavigationManager

<div class="container mb-4 pl-0">
    <div class="row">
        <div class="col-6">
            <h3>Companies</h3>
        </div>
        <hr />
        <div class="col-5">
            <button class="button btn-main" @onclick="() => OnOpenCompanyAddDialog()">Create Company</button>
        </div>
    </div>
</div>
@if (companyListObj is null)
{
    <LoadingSpinner />
}
else
{
    <div class="osiris-primary-card">
        <div class="container">
            <div class="div-center-container row">
                @foreach (var company in companyListObj)
                {
                    <div class="osiris-card m-3" @onclick="() => NavigateToCompany(company.CompanyId)">
                        <div class="text-capitalize mb-3" style="font-weight: 700; font-size: 20px">@company.Name</div>
                        @if (userListObj is null)
                        {
                            <LoadingSpinner />
                        }
                        else
                        {
                            var userCount = 0;
                            @foreach (var users in userListObj)
                            {
                                if (users.CompanyId == company.CompanyId)
                                {
                                    userCount++;
                                }
                            }
                            <div class="add-border" style="display: inline">
                                <div class="oi oi-person" style="color: #fff"></div>
                            </div>
                            <div style="font-weight: 700; display : inline">@userCount</div>
                        }
                    </div>
                }
            </div>
        </div>
    </div>
    @if (OpenAddCompanyDialog)
    {
        <CompanyCreate OnClose="@(AddCompany)" />
    }
}

@code {
    List<Company> companyListObj;
    List<User> userListObj;
    Company companyObject = new Company();

    private async Task loadUserData()
    {
        userListObj = await Task.Run(() => userService.GetAllUsersAsync());
        StateHasChanged();
    }
    private async Task loadCompanyData()
    {
        companyListObj = await Task.Run(() => companyService.GetAllCompaniesAsync());
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await loadCompanyData();
        await loadUserData();
    }

    private void NavigateToCompany(Guid companyId)
    {
        NavigationManager.NavigateTo($"/companies/company-view/{companyId}");
    }

    /* Modal Logic */

    /* Company Modal Logic*/
    /* Company Add Logic */
    private Boolean OpenAddCompanyDialog { get; set; }
    private void OnOpenCompanyAddDialog()
    {
        OpenAddCompanyDialog = true;
    }
    private async Task AddCompany(Boolean accepted)
    {
        if (accepted)
        {
            await loadCompanyData();
        }
        OpenAddCompanyDialog = false;
        StateHasChanged();
    }
}
