@page "/project/project-view/{Id}/"
@using Osiris.Data
@inject ProjectService projectService
@inject NavigationManager NavigationManager

@if (isLoaded.Equals(false))
{
    <LoadingSpinner />
}
else
{
    <h3>Project @projectObject.Name</h3>
    <p>@projectObject.Description</p>
    <p>@projectObject.ProjectId</p>

    <button type="button" class="btn-remove" @onclick="() => OnOpenDeleteDialog()">Delete</button>
    <button type="button" class="btn-outlined" @onclick="() => OnOpenEditDialog()">Edit</button>
    <a class="btn-outlined" href="/project/project-view/@projectObject.ProjectId/section-board">Section</a>

    @if (OpenDeleteDialog)
    {
        <ModalDeleteDialog Title="Are you sure ?"
                           Text="@projectObject.Name"
                           ButtonName="Delete"
                           RetrievedData="@projectObject.ProjectId.ToString()"
                           OnClose="@OnProjectDeleteDialog" />
    }
    @if (OpenUpdateDialog)
    {
        <ProjectUpdate OnClose="@(OnCancelUpdateDialog)" RetrievedData="@projectObject.ProjectId.ToString()" />
    }
}

@code {
    [Parameter]
    public String Id { get; set; }
    Project projectObject = new Project();
    Boolean isLoaded = false;

    private async Task loadData()
    {
        projectObject = await Task.Run(() => projectService.GetProjectAsync(Id));
        StateHasChanged();
    }
    protected override async Task OnInitializedAsync()
    {
        await loadData();
        isLoaded = true;
    }

    /* Modal Logic */

    /* Modal Project Deletion Logic */
    public Boolean OpenDeleteDialog { get; set; }
    private async Task OnProjectDeleteDialog(Boolean accepted)
    {
        if (accepted)
        {
            await projectService.DeleteProjectAsync(projectObject);
            NavigationManager.NavigateTo("/projects");
        }
        OpenDeleteDialog = false;
        StateHasChanged();
    }
    private void OnOpenDeleteDialog()
    {
        OpenDeleteDialog = true;
        StateHasChanged();
    }

    /* Modal Project Update Logic */
    public Boolean OpenUpdateDialog { get; set; }
    private void OnOpenEditDialog()
    {
        OpenUpdateDialog = true;
        StateHasChanged();
    }
    private async Task OnCancelUpdateDialog(Boolean accepted)
    {
        if (accepted)
        {
            await loadData();
        }
        OpenUpdateDialog = false;
        StateHasChanged();
    }
}
